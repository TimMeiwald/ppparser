name: CI
on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]
  workflow_dispatch:
env:
  CARGO_TERM_COLOR: always
  CI_NAME: "${{ github.ref_name }}-CI"

jobs:

  Build_And_Cache:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
    - name: Rust Cache
      uses: Swatinem/rust-cache@v2
      with:
          cache-targets: "true"
          shared-key: ${{ env.CI_NAME }}
    - name: Print Cache Key
      run: echo ${{ env.CI_NAME }}
    - name: Build
      run: cargo build --verbose
    - name: Build Test without Running
      run: cargo test --no-run

  Test:
    needs: Build_And_Cache
    runs-on: ubuntu-latest
    steps: 
    - name: Checkout code
      uses: actions/checkout@v3
    - name: Rust Cache
      uses: Swatinem/rust-cache@v2
      with:
        shared-key: ${{ env.CI_NAME }}
        save-if: "false"
    - name: Test
      run: |
        RUST_BACKTRACE=1
        cargo test --verbose

  Format:
    needs: Build_And_Cache
    runs-on: ubuntu-latest
    steps: 
    - name: Checkout code
      uses: actions/checkout@v3
    - name: Rust Cache
      uses: Swatinem/rust-cache@v2
      with:
        shared-key: ${{ env.CI_NAME }}
        save-if: "false"
    - name: Format
      run: cargo fmt -- --check

  Lint:
    needs: Build_And_Cache
    runs-on: ubuntu-latest
    steps: 
    - name: Checkout code
      uses: actions/checkout@v3
    - name: Rust Cache
      uses: Swatinem/rust-cache@v2
      with:
        shared-key: ${{ env.CI_NAME }}
        save-if: "false"
    - name: Lint
      env:
        RUSTFLAGS: "-Dwarnings"
      run: cargo clippy
  Release_Test:
        needs: [Test, Format, Lint]
        runs-on: ubuntu-latest
        steps: 
          - name: Checkout code
            uses: actions/checkout@v3
          - name: Rust Cache
            uses: Swatinem/rust-cache@v2
            with:
              shared-key: ${{ env.CI_NAME }}
              save-if: "false"
          - name: Test
            run: cargo test --release

running 3 tests
ENTERING GROWTH FUNCTION!: (test_fact_indirect, 0)
ENTERING GROWTH FUNCTION!: (test_fact_indirect, 0)
GROWTH RULE: test_fact_indirect, POSITION: 0, LOOP COUNT: 0
ENTERING GROWTH FUNCTION!: (test_term_indirect, 0)
GROWTH RULE: test_fact_indirect, POSITION: 0, LOOP COUNT: 0
Head { start_position: 0, active_left_recursion_rule: test_fact_indirect, involved_set: {test_fact_indirect}, eval_set: {test_fact_indirect} }
GROWTH RULE: test_term_indirect, POSITION: 0, LOOP COUNT: 0
Head { start_position: 0, active_left_recursion_rule: test_fact_indirect, involved_set: {test_fact_indirect}, eval_set: {test_fact_indirect} }
Head { start_position: 0, active_left_recursion_rule: test_fact_indirect, involved_set: {test_fact_indirect}, eval_set: {} }
Head { start_position: 0, active_left_recursion_rule: test_fact_indirect, involved_set: {test_fact_indirect}, eval_set: {} }
Head { start_position: 0, active_left_recursion_rule: test_fact_indirect, involved_set: {test_fact_indirect}, eval_set: {} }
Head { start_position: 0, active_left_recursion_rule: test_term_indirect, involved_set: {test_term_indirect}, eval_set: {test_term_indirect} }
Current
Memo
Head { start_position: 0, active_left_recursion_rule: test_fact_indirect, involved_set: {test_fact_indirect}, eval_set: {} }
Head { start_position: 0, active_left_recursion_rule: test_term_indirect, involved_set: {test_term_indirect}, eval_set: {} }
Head { start_position: 0, active_left_recursion_rule: test_term_indirect, involved_set: {test_term_indirect}, eval_set: {} }
Head { start_position: 0, active_left_recursion_rule: test_term_indirect, involved_set: {test_term_indirect}, eval_set: {} }
ENTERING GROWTH FUNCTION!: (test_fact_indirect, 0)
Key(2), test_fact_indirect, 0, 1, true, 1
GROWTH RULE: test_fact_indirect, POSITION: 0, LOOP COUNT: 0
    Key(3), Num, 0, 1, true, 0
LOOP: 0, Result: (true, 3)
Current
Memo
Key(2), test_fact_indirect, 0, 1, true, 1
    Key(3), Num, 0, 1, true, 0
LOOP: 0, Result: (true, 3)
GROWTH RULE: test_fact_indirect, POSITION: 0, LOOP COUNT: 1
GROWTH RULE: test_fact_indirect, POSITION: 0, LOOP COUNT: 1
Head { start_position: 0, active_left_recursion_rule: test_fact_indirect, involved_set: {test_fact_indirect}, eval_set: {test_fact_indirect} }
Head { start_position: 0, active_left_recursion_rule: test_fact_indirect, involved_set: {test_fact_indirect}, eval_set: {test_fact_indirect} }
Head { start_position: 0, active_left_recursion_rule: test_fact_indirect, involved_set: {test_fact_indirect}, eval_set: {test_fact_indirect} }
Head { start_position: 0, active_left_recursion_rule: test_fact_indirect, involved_set: {test_fact_indirect}, eval_set: {} }
Head { start_position: 0, active_left_recursion_rule: test_fact_indirect, involved_set: {test_fact_indirect}, eval_set: {} }
Head { start_position: 0, active_left_recursion_rule: test_fact_indirect, involved_set: {test_fact_indirect}, eval_set: {} }
Head { start_position: 0, active_left_recursion_rule: test_fact_indirect, involved_set: {test_fact_indirect}, eval_set: {} }
Head { start_position: 0, active_left_recursion_rule: test_fact_indirect, involved_set: {test_fact_indirect}, eval_set: {} }
Head { start_position: 0, active_left_recursion_rule: test_fact_indirect, involved_set: {test_fact_indirect}, eval_set: {} }
Head { start_position: 0, active_left_recursion_rule: test_fact_indirect, involved_set: {test_fact_indirect}, eval_set: {} }
Current
Memo
Current
Memo
Key(6), test_fact_indirect, 0, 3, true, 1
    Key(4), Num, 2, 3, true, 0
Key(4), test_fact_indirect, 0, 1, true, 1
    Key(5), Num, 0, 1, true, 0
LOOP: 0, Result: (true, 1)
LOOP: 1, Result: (true, 5)
GROWTH RULE: test_fact_indirect, POSITION: 0, LOOP COUNT: 2
Head { start_position: 0, active_left_recursion_rule: test_fact_indirect, involved_set: {test_fact_indirect}, eval_set: {test_fact_indirect} }
Current
Memo
GROWTH RULE: test_fact_indirect, POSITION: 0, LOOP COUNT: 1
Head { start_position: 0, active_left_recursion_rule: test_fact_indirect, involved_set: {test_fact_indirect}, eval_set: {test_fact_indirect} }
Head { start_position: 0, active_left_recursion_rule: test_fact_indirect, involved_set: {test_fact_indirect}, eval_set: {} }
Head { start_position: 0, active_left_recursion_rule: test_fact_indirect, involved_set: {test_fact_indirect}, eval_set: {} }
Head { start_position: 0, active_left_recursion_rule: test_fact_indirect, involved_set: {test_fact_indirect}, eval_set: {} }
Key(6), test_fact_indirect, 0, 3, true, 1
    Key(4), Num, 2, 3, true, 0
LOOP: 1, Result: (true, 5)
GROWTH RULE: test_fact_indirect, POSITION: 0, LOOP COUNT: 2
Current
Memo
Key(7), test_fact_indirect, 0, 1, true, 1
    Key(5), Num, 0, 1, true, 0
LOOP: 1, Result: (true, 1)
Head { start_position: 0, active_left_recursion_rule: test_fact_indirect, involved_set: {test_fact_indirect}, eval_set: {} }
Head { start_position: 0, active_left_recursion_rule: test_fact_indirect, involved_set: {test_fact_indirect}, eval_set: {test_fact_indirect} }
Head { start_position: 0, active_left_recursion_rule: test_fact_indirect, involved_set: {test_fact_indirect}, eval_set: {} }
Head { start_position: 0, active_left_recursion_rule: test_fact_indirect, involved_set: {test_fact_indirect}, eval_set: {} }
ENTERING GROWTH FUNCTION!: (test_fact_indirect, 2)
Head { start_position: 0, active_left_recursion_rule: test_fact_indirect, involved_set: {test_fact_indirect}, eval_set: {} }
Current
Memo
GROWTH RULE: test_fact_indirect, POSITION: 2, LOOP COUNT: 0
Head { start_position: 2, active_left_recursion_rule: test_fact_indirect, involved_set: {test_fact_indirect}, eval_set: {test_fact_indirect} }
Head { start_position: 2, active_left_recursion_rule: test_fact_indirect, involved_set: {test_fact_indirect}, eval_set: {} }
Key(9), test_fact_indirect, 0, 5, true, 1
    Key(7), Num, 4, 5, true, 0
LOOP: 2, Result: (true, 7)
GROWTH RULE: test_fact_indirect, POSITION: 0, LOOP COUNT: 3
Head { start_position: 2, active_left_recursion_rule: test_fact_indirect, involved_set: {test_fact_indirect}, eval_set: {} }
Head { start_position: 0, active_left_recursion_rule: test_fact_indirect, involved_set: {test_fact_indirect}, eval_set: {} }
Head { start_position: 0, active_left_recursion_rule: test_fact_indirect, involved_set: {test_fact_indirect}, eval_set: {test_fact_indirect} }
Head { start_position: 0, active_left_recursion_rule: test_fact_indirect, involved_set: {test_fact_indirect}, eval_set: {} }
Current
Memo
Key(9), test_fact_indirect, 0, 5, true, 1
Head { start_position: 2, active_left_recursion_rule: test_fact_indirect, involved_set: {test_fact_indirect}, eval_set: {} }
Head { start_position: 0, active_left_recursion_rule: test_fact_indirect, involved_set: {test_fact_indirect}, eval_set: {} }
Current
Memo
Key(12), test_fact_indirect, 0, 7, true, 1
    Key(10), Num, 6, 7, true, 0
    Key(7), Num, 4, 5, true, 0
LOOP: 2, Result: (true, 7)
GROWTH RULE: test_fact_indirect, POSITION: 0, LOOP COUNT: 3
Head { start_position: 0, active_left_recursion_rule: test_fact_indirect, involved_set: {test_fact_indirect}, eval_set: {test_fact_indirect} }
LOOP: 3, Result: (true, 9)
GROWTH RULE: test_fact_indirect, POSITION: 0, LOOP COUNT: 4
Head { start_position: 0, active_left_recursion_rule: test_fact_indirect, involved_set: {test_fact_indirect}, eval_set: {} }
Head { start_position: 0, active_left_recursion_rule: test_fact_indirect, involved_set: {test_fact_indirect}, eval_set: {} }
Head { start_position: 0, active_left_recursion_rule: test_fact_indirect, involved_set: {test_fact_indirect}, eval_set: {test_fact_indirect} }
Head { start_position: 0, active_left_recursion_rule: test_fact_indirect, involved_set: {test_fact_indirect}, eval_set: {} }
Head { start_position: 0, active_left_recursion_rule: test_fact_indirect, involved_set: {test_fact_indirect}, eval_set: {} }
Head { start_position: 0, active_left_recursion_rule: test_fact_indirect, involved_set: {test_fact_indirect}, eval_set: {} }
Current
Memo
Head { start_position: 0, active_left_recursion_rule: test_fact_indirect, involved_set: {test_fact_indirect}, eval_set: {} }
Current
Memo
Key(9), test_fact_indirect, 2, 3, true, 1
    Key(10), Num, 2, 3, true, 0
LOOP: 0, Result: (true, 5)
GROWTH RULE: test_fact_indirect, POSITION: 2, LOOP COUNT: 1
Current
Memo
Key(15), test_fact_indirect, 0, 9, true, 1
    Key(13), Num, 8, 9, true, 0
Head { start_position: 2, active_left_recursion_rule: test_fact_indirect, involved_set: {test_fact_indirect}, eval_set: {test_fact_indirect} }
Key(12), test_fact_indirect, 0, 7, true, 1
    Key(10), Num, 6, 7, true, 0
LOOP: 4, Result: (true, 1)
Head { start_position: 2, active_left_recursion_rule: test_fact_indirect, involved_set: {test_fact_indirect}, eval_set: {} }
Head { start_position: 2, active_left_recursion_rule: test_fact_indirect, involved_set: {test_fact_indirect}, eval_set: {} }
LOOP: 3, Result: (true, 1)
Key(0), Grammar, 0, 0, true, 0
Key(0), Grammar, 0, 0, true, 0
Expected tree:
Head { start_position: 2, active_left_recursion_rule: test_fact_indirect, involved_set: {test_fact_indirect}, eval_set: {} }
Expected tree:
Key(0), Grammar, 0, 0, true, 1
Key(0), Grammar, 0, 0, true, 1
    Key(1), test_fact_indirect, 0, 7, true, 2
Current
Memo
    Key(1), test_fact_indirect, 0, 9, true, 2
        Key(2), test_fact_indirect, 0, 7, true, 2
        Key(2), test_fact_indirect, 0, 5, true, 2
            Key(3), test_fact_indirect, 0, 3, true, 2
                Key(4), test_fact_indirect, 0, 1, true, 1
                    Key(5), Num, 0, 1, true, 0
            Key(3), test_fact_indirect, 0, 5, true, 2
                Key(4), test_fact_indirect, 0, 3, true, 2
                    Key(5), test_fact_indirect, 0, 1, true, 1
                        Key(6), Num, 0, 1, true, 0
Key(13), test_fact_indirect, 2, 5, true, 1
    Key(11), Num, 4, 5, true, 0
                Key(6), Num, 2, 3, true, 0
            Key(7), Num, 4, 5, true, 0
        Key(8), Num, 6, 7, true, 0
Number of children must be identical!.
Key(0), Grammar, 0, 0, true, 1
Key(0), Grammar, 0, 0, true, 0
                    Key(7), Num, 2, 3, true, 0
                Key(8), Num, 4, 5, true, 0
LOOP: 1, Result: (true, 3)
            Key(9), Num, 6, 7, true, 0
        Key(10), Num, 8, 9, true, 0
Current
Memo
Key(2), test_term_indirect, 0, 1, true, 0
LOOP: 0, Result: (true, 5)
GROWTH RULE: test_term_indirect, POSITION: 0, LOOP COUNT: 1
Number of children must be identical!.
Key(0), Grammar, 0, 0, true, 1
Head { start_position: 0, active_left_recursion_rule: test_term_indirect, involved_set: {test_term_indirect}, eval_set: {test_term_indirect} }
Key(0), Grammar, 0, 0, true, 0
Head { start_position: 0, active_left_recursion_rule: test_term_indirect, involved_set: {test_term_indirect}, eval_set: {} }
Head { start_position: 2, active_left_recursion_rule: test_fact_indirect, involved_set: {test_fact_indirect}, eval_set: {} }
ENTERING GROWTH FUNCTION!: (test_fact_indirect, 6)
GROWTH RULE: test_fact_indirect, POSITION: 6, LOOP COUNT: 0
Head { start_position: 6, active_left_recursion_rule: test_fact_indirect, involved_set: {test_fact_indirect}, eval_set: {test_fact_indirect} }
Head { start_position: 6, active_left_recursion_rule: test_fact_indirect, involved_set: {test_fact_indirect}, eval_set: {} }
Head { start_position: 6, active_left_recursion_rule: test_fact_indirect, involved_set: {test_fact_indirect}, eval_set: {} }
Head { start_position: 6, active_left_recursion_rule: test_fact_indirect, involved_set: {test_fact_indirect}, eval_set: {} }
Current
Memo
Key(17), test_fact_indirect, 6, 7, true, 1
    Key(18), Num, 6, 7, true, 0
LOOP: 0, Result: (true, 9)
GROWTH RULE: test_fact_indirect, POSITION: 6, LOOP COUNT: 1
Head { start_position: 6, active_left_recursion_rule: test_fact_indirect, involved_set: {test_fact_indirect}, eval_set: {test_fact_indirect} }
Head { start_position: 6, active_left_recursion_rule: test_fact_indirect, involved_set: {test_fact_indirect}, eval_set: {} }
Head { start_position: 6, active_left_recursion_rule: test_fact_indirect, involved_set: {test_fact_indirect}, eval_set: {} }
test tests::test_fact_indirect_11 ... FAILEDHead { start_position: 6, active_left_recursion_rule: test_fact_indirect, involved_set: {test_fact_indirect}, eval_set: {} }

Current
Memo
test tests::test_fact_indirect_1 ... Key(21), test_fact_indirect, 6, 9, true, 1
    Key(19), Num, 8, 9, true, 0
LOOP: 1, Result: (true, 7)
FAILEDCurrent
Memo
Key(15), test_term_indirect, 0, 5, true, 0

LOOP: 1, Result: (true, 9)
GROWTH RULE: test_term_indirect, POSITION: 0, LOOP COUNT: 2
Head { start_position: 0, active_left_recursion_rule: test_term_indirect, involved_set: {test_term_indirect}, eval_set: {test_term_indirect} }
Head { start_position: 0, active_left_recursion_rule: test_term_indirect, involved_set: {test_term_indirect}, eval_set: {} }
Head { start_position: 6, active_left_recursion_rule: test_fact_indirect, involved_set: {test_fact_indirect}, eval_set: {} }
Head { start_position: 0, active_left_recursion_rule: test_term_indirect, involved_set: {test_term_indirect}, eval_set: {} }
Head { start_position: 0, active_left_recursion_rule: test_term_indirect, involved_set: {test_term_indirect}, eval_set: {} }
ENTERING GROWTH FUNCTION!: (test_fact_indirect, 0)
GROWTH RULE: test_fact_indirect, POSITION: 0, LOOP COUNT: 0
Head { start_position: 0, active_left_recursion_rule: test_fact_indirect, involved_set: {test_fact_indirect}, eval_set: {test_fact_indirect} }
Head { start_position: 0, active_left_recursion_rule: test_fact_indirect, involved_set: {test_fact_indirect}, eval_set: {} }
Head { start_position: 0, active_left_recursion_rule: test_fact_indirect, involved_set: {test_fact_indirect}, eval_set: {} }
Head { start_position: 0, active_left_recursion_rule: test_fact_indirect, involved_set: {test_fact_indirect}, eval_set: {} }
Current
Memo
Key(25), test_fact_indirect, 0, 1, true, 1
    Key(5), Num, 0, 1, true, 0
LOOP: 0, Result: (true, 1)
GROWTH RULE: test_fact_indirect, POSITION: 0, LOOP COUNT: 1
Head { start_position: 0, active_left_recursion_rule: test_fact_indirect, involved_set: {test_fact_indirect}, eval_set: {test_fact_indirect} }
Head { start_position: 0, active_left_recursion_rule: test_fact_indirect, involved_set: {test_fact_indirect}, eval_set: {} }
Head { start_position: 0, active_left_recursion_rule: test_fact_indirect, involved_set: {test_fact_indirect}, eval_set: {} }
Head { start_position: 0, active_left_recursion_rule: test_fact_indirect, involved_set: {test_fact_indirect}, eval_set: {} }
Current
Memo
Key(27), test_fact_indirect, 0, 1, true, 1
    Key(5), Num, 0, 1, true, 0
LOOP: 1, Result: (true, 1)
Current
Memo
Key(23), test_term_indirect, 0, 9, true, 0
LOOP: 2, Result: (true, 1)
Result: (true, 9)
Key(0), Grammar, 0, 0, true, 0
Expected tree:
Key(0), Grammar, 0, 0, true, 1
    Key(1), test_term_indirect, 0, 9, true, 2
        Key(2), test_term_indirect, 0, 5, true, 2
            Key(3), test_term_indirect, 0, 1, true, 1
                Key(4), test_fact_indirect, 0, 1, true, 1
                    Key(5), Num, 0, 1, true, 0
            Key(6), test_fact_indirect, 2, 5, true, 2
                Key(7), test_fact_indirect, 2, 3, true, 1
                    Key(8), Num, 2, 3, true, 0
                Key(9), Num, 4, 5, true, 0
        Key(10), test_fact_indirect, 6, 9, true, 2
            Key(11), test_fact_indirect, 6, 7, true, 1
                Key(12), Num, 6, 7, true, 0
            Key(13), Num, 8, 9, true, 0
Number of children must be identical!.
Key(0), Grammar, 0, 0, true, 1
Key(0), Grammar, 0, 0, true, 0
test tests::test_test_term_indirect_1 ... FAILED

failures:

failures:
    tests::test_fact_indirect_1
    tests::test_fact_indirect_11
    tests::test_test_term_indirect_1

test result: FAILED. 0 passed; 3 failed; 0 ignored; 0 measured; 5 filtered out; finished in 0.00s

